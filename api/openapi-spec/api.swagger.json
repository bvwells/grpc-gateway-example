{
  "swagger": "2.0",
  "info": {
    "title": "Beer API",
    "description": "The beer API consists of a set of APIs for accessing a beer catalogue.",
    "version": "1.0",
    "contact": {
      "name": "Ben Wells",
      "url": "https://github.com/bvwells/grpc-gateway-example",
      "email": "b.v.wells@gmail.com"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/beers": {
      "get": {
        "summary": "Get all beers.",
        "operationId": "getBeers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBeersResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "beers"
        ]
      },
      "post": {
        "summary": "Create a beer.",
        "operationId": "createBeer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateBeerResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBeerRequest"
            }
          }
        ],
        "tags": [
          "beer"
        ]
      }
    },
    "/api/v1/beers/{beer.id}": {
      "patch": {
        "summary": "Update beer with given identifier.",
        "operationId": "updateBeer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateBeerResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "beer.id",
            "description": "The unique identifier of the beer.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Beer"
            }
          }
        ],
        "tags": [
          "beer"
        ]
      }
    },
    "/api/v1/beers/{id}": {
      "get": {
        "summary": "Get beer with given identifier.",
        "operationId": "getBeer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBeerResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Beer identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "beer"
        ]
      },
      "delete": {
        "summary": "Delete beer with given identifier.",
        "operationId": "deleteBeer",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteBeerResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Beer identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "beer"
        ]
      }
    }
  },
  "definitions": {
    "Beer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the beer."
        },
        "name": {
          "type": "string",
          "description": "The name of the beer."
        },
        "type": {
          "$ref": "#/definitions/Type",
          "description": "The type of the beer."
        },
        "brewer": {
          "type": "string",
          "description": "The brewer of the beer."
        },
        "country": {
          "type": "string",
          "description": "The country the been originated from."
        }
      },
      "description": "A definition of a beer.",
      "title": "Beer",
      "required": [
        "id",
        "name"
      ]
    },
    "CreateBeerRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the beer."
        },
        "type": {
          "$ref": "#/definitions/Type",
          "description": "The type of the beer."
        },
        "brewer": {
          "type": "string",
          "description": "The brewer of the beer."
        },
        "country": {
          "type": "string",
          "description": "The country the been originated from."
        }
      },
      "description": "Request for creating a beer.",
      "title": "CreateBeerRequest",
      "required": [
        "name"
      ]
    },
    "CreateBeerResponse": {
      "type": "object",
      "properties": {
        "beer": {
          "$ref": "#/definitions/Beer",
          "description": "The beer created."
        }
      },
      "description": "Response from creating a beer.",
      "title": "CreateBeerResponse",
      "required": [
        "beer"
      ]
    },
    "DeleteBeerResponse": {
      "type": "object",
      "description": "Response from deleting a beer.",
      "title": "UpdateBeerResponse"
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Response code."
        },
        "message": {
          "type": "string",
          "description": "Response message."
        }
      }
    },
    "GetBeerResponse": {
      "type": "object",
      "properties": {
        "beer": {
          "$ref": "#/definitions/Beer",
          "description": "The beer."
        }
      },
      "description": "Response from getting a beer.",
      "title": "GetBeerResponse",
      "required": [
        "beer"
      ]
    },
    "GetBeersResponse": {
      "type": "object",
      "properties": {
        "beers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Beer"
          },
          "description": "The beers."
        }
      },
      "description": "Response from gettings beer.",
      "title": "GetBeersResponse",
      "required": [
        "beers"
      ]
    },
    "Type": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ALE",
        "BITTER",
        "LARGER",
        "INDIA_PALE_ALE",
        "STOUT",
        "PILSNER",
        "PORTER",
        "PALE_ALE"
      ],
      "default": "UNKNOWN"
    },
    "UpdateBeerResponse": {
      "type": "object",
      "properties": {
        "beer": {
          "$ref": "#/definitions/Beer",
          "description": "The beer updated."
        }
      },
      "description": "Response from updating a beer.",
      "title": "UpdateBeerResponse",
      "required": [
        "beer"
      ]
    }
  }
}